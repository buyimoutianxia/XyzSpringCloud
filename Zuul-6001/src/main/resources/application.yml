server:
  port: 6001

eureka:
  instance:
#    instance-id: Zuul-6001
    instance-id: ${spring.cloud.client.ip-address}:${server.port}
    prefer-ip-address: true
  client:
    service-url:
      defaultZone: http://server7001:7001/eureka/,http://server7002:7002/eureka/,http://server7003:7003/eureka/


  #解决eureka控制台中的Info页面错误问题
info:
  app.name: com.xyz.microservice
  build.artifactId: $project.artifactId$ #使用maven内置变量project.artifactId和project.version完成对变量的赋值
  build.version: $project.version$

spring:
  application:
    name: microservicezuul

zuul:
  prefix: /xyz #统一增加访问前缀
  ignoredServices: "*" #禁止所有的微服务通过zuul的原路径访问`http://localhost:6001/xyz/microservice-provider/provider/list`
  routes:
#    microservice-provider: /mydept/** #简化路由配置方法1：如果路由ID与微服务的serviceId一致的话
    mydept: #路由ID
      path: /mydept/**   #zuul对外提供的映射路径
      serviceId: microservice-provider  #映射对应的微服务名称
    myforward: #在API网关上实现本地跳转 `http://localhost:6001/xyz/myforward/provider/list?accessToken=1`
      path: /myforward/**
      url: forward:/local
#  ignored-patterns: /**/list  #配置不希望被API网关路由的URL表达式
  MyPreFilter:
    pre:
      disable: true #禁用单个过滤器
  MyPreFilterException:
    pre:
      disable: true
  MyRouteFilterException:
    route:
      disable: true
  MyPostFilterException:
    post:
      disable: true
  retryable: true  #是否开始重试

ribbon:
  MaxAutoRetries: 3 #对当前服务的重试次数
  MaxAutoRetriesNextServer: 0 #切换相同server的次数


#Zuul不使用微服务信息（不再注册中心中注册），也可以实现负载均衡，类似nginx的功能，采用path和url的映射方式
#zuul:
#  routes:
#    mydept8001:
#      path: /8001/**
#      url: http://localhost:8001/
#    mydept8002:
#      path: /8002/**
#      url: http://localhost:8002/
